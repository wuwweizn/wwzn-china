name: Build and Push Lucky Multi-Arch Docker Image with Release

permissions:
  contents: write
  packages: write

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout 代码
      - name: Checkout
        uses: actions/checkout@v3

      # 2. 登录 GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 3. 设置 QEMU 支持
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # 4. 设置 Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 5. 获取 gdy666/lucky 最新版本号
      - name: Get version from gdy666/lucky
        id: version
        run: |
          # 获取远程仓库 tags，取最新 tag
          LATEST_TAG=$(git ls-remote --tags https://github.com/gdy666/lucky.git | \
            awk -F/ '{print $3}' | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n1)
          echo "Latest upstream tag: $LATEST_TAG"
          # 去掉前缀 v
          VERSION=${LATEST_TAG#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # 6. 构建并推送多架构镜像
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/lucky:latest
            ghcr.io/${{ github.repository_owner }}/lucky:${{ steps.version.outputs.version }}

      # 7. 生成 pull.txt 文件
      - name: Create Pull Command File
        run: |
          echo "docker pull ghcr.io/${{ github.repository_owner }}/lucky:latest" > pull.txt
          echo "docker pull ghcr.io/${{ github.repository_owner }}/lucky:${{ steps.version.outputs.version }}" >> pull.txt

      # 8. 创建 GitHub Release（用 PAT 避免 403）
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          body: |
            Auto-generated release for lucky Docker image.
            Multi-arch image (amd64, arm64, armv7) pushed to GitHub Packages.
            See pull.txt for docker pull commands.
          files: pull.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
