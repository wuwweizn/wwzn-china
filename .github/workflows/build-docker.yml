name: Auto-detect Latest Docker Tag & Multi-Arch Build

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. 设置 Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. 登录 Docker Hub（如果是私有仓库）
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. 获取最新可用标签
      - name: Get latest Docker tag
        id: get_tag
        run: |
          IMAGE_NAME="yourrepo/yourimage"  # 替换为你的仓库名
          echo "Fetching latest tag for $IMAGE_NAME ..."
          
          # 获取 Docker Hub 的 tag 列表并选择最新
          TAG=$(curl -s "https://registry.hub.docker.com/v2/repositories/${IMAGE_NAME}/tags?page_size=100" \
                  | jq -r '.results[].name' \
                  | sort -Vr \
                  | head -n1)
          
          if [ -z "$TAG" ]; then
            echo "No tag found! Exiting..."
            exit 1
          fi
          
          echo "Latest tag is $TAG"
          echo "TAG=$TAG" >> $GITHUB_ENV

      # 5. 安全拉取最新镜像
      - name: Safe pull latest upstream image
        run: |
          IMAGE="yourrepo/yourimage:${{ env.TAG }}"
          echo "Pulling $IMAGE ..."
          if docker pull $IMAGE; then
            echo "Successfully pulled $IMAGE"
          else
            echo "Warning: $IMAGE not found. Skipping pull."
          fi

      # 6. 构建并推送多架构镜像
      - name: Build and push multi-arch image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: yourrepo/yourimage:${{ env.TAG }}
