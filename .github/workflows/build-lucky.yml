name: Build Lucky Multi-Arch Binaries

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'  # 可以手动 push tag 触发

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64, armv7]

    steps:
      # 1. Checkout 代码（你仓库可选，不影响从 upstream 拉取）
      - name: Checkout
        uses: actions/checkout@v3

      # 2. 获取 upstream latest tag 并 checkout
      - name: Get latest upstream version
        id: version
        run: |
          echo "Fetching latest tag from gdy666/lucky..."
          LATEST_TAG=$(git ls-remote --tags https://github.com/gdy666/lucky.git | \
            awk -F/ '{print $3}' | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n1)
          echo "Latest tag: $LATEST_TAG"
          VERSION=${LATEST_TAG#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # 3. Clone upstream源码
      - name: Clone upstream lucky
        run: |
          git clone --branch v${{ steps.version.outputs.version }} https://github.com/gdy666/lucky.git lucky-src

      # 4. Setup Go
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      # 5. 架构映射
      - name: Map ARCH
        run: |
          if [[ "${{ matrix.arch }}" == "arm64" ]]; then
            BUILD_ARCH="aarch64"
          elif [[ "${{ matrix.arch }}" == "armv7" ]]; then
            BUILD_ARCH="armv7"
          else
            BUILD_ARCH="${{ matrix.arch }}"
          fi
          echo "BUILD_ARCH=$BUILD_ARCH" >> $GITHUB_ENV

      # 6. 交叉编译
      - name: Build lucky binary for ${{ matrix.arch }}
        run: |
          cd lucky-src
          mkdir -p build
          if [[ "${{ matrix.arch }}" == "armv7" ]]; then
            GOARCH=arm GOARM=7 GOOS=linux go build -o ../lucky-${BUILD_ARCH} .
          else
            GOARCH=${{ matrix.arch }} GOOS=linux go build -o ../lucky-${BUILD_ARCH} .
          fi
          cd ..
          ls -lh lucky-${BUILD_ARCH}

      # 7. 创建 Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          files: |
            lucky-amd64
            lucky-aarch64
            lucky-armv7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
